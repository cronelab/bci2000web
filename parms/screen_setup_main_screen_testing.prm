Application:Application%20Window int WindowWidth= 500 640 0 % // width of Application window
Application:Application%20Window int WindowHeight= 500 480 0 % // height of Application window
Application:Application%20Window int WindowLeft= 0 0 % % // screen coordinate of Application window's left edge
Application:Application%20Window int WindowTop= 0 0 % % // screen coordinate of Application window's top edge
Application:Application%20Window string WindowBackgroundColor= 0x000000 0x505050 % % // Application window background color (color)
Application:Application%20Window matrix WindowInfo= 1 1 auto // Application window information (readonly)(noedit)
Visualize:Application%20Window int VisualizeApplicationWindow= 0 0 0 1 // Display miniature copy of Application window (boolean)
Visualize:Application%20Window int AppWindowSpatialDecimation= 8 8 1 % // Application window decimation (shrinking) factor
Visualize:Application%20Window int AppWindowTemporalDecimation= 4 16 1 % // Application window time decimation factor
Application:AudioPlayback float AudioPlaybackRate= auto // audio playback sampling rate
Application:AudioPlayback int AudioPlaybackChannels= auto // number of playback output channels
Application:AudioPlayback float AudioPlaybackBufferDuration= auto // duration of playback buffer
Visualize:Application%20Log int ShowAppLog= 1 0 0 1 // Show application log window (boolean)
Application:Sequencing float PreRunDuration= 20s 1 0 % // pause preceding first sequence
Application:Sequencing float PostRunDuration= 5s 0 0 % // pause following last sequence
Application:Sequencing float PreSequenceDuration= 5s 2s 0 % // pause preceding sequences/sets of intensifications
Application:Sequencing float PostSequenceDuration= 5s 2s 0 % // pause following sequences/sets of intensifications
Application:Sequencing float StimulusDuration= 1s 40ms 0 % // stimulus duration
Application:Sequencing string EarlyOffsetExpression= % // abort stimulus if this expression becomes true
Application:Sequencing float ISIMinDuration= 3.5s 80ms 0 % // minimum duration of inter-stimulus interval
Application:Sequencing float ISIMaxDuration= 4.5s 80ms 0 % // maximum duration of inter-stimulus interval
Application:Result%20Processing int InterpretMode= 0 0 0 2 // interpretation of results: 0 none, 1 online free mode, 2 copy mode (enumeration)
Application:Result%20Processing int DisplayResults= 0 1 0 1 // display results of copy/free spelling (boolean)
Application:Result%20Processing int AccumulateEvidence= 0 0 0 1 // accumulate evidence until a selection is made (boolean)
Application:Result%20Processing float MinimumEvidence= 0 0 0 % // do not make a selection unless target evidence exceeds this value. For a normalized classifier, MinimumEvidence approximates -2.3*log10(Error Probability)
Application:Sequencing intlist Sequence= 40 2 4 4 1 2 3 3 2 3 3 3 4 4 4 3 2 2 4 4 2 3 3 4 1 4 1 2 1 1 4 1 3 1 1 2 2 1 3 1 2 // Sequence in which stimuli are presented (deterministic mode)/ Stimulus frequencies for each stimulus (random mode)/ Ignored (P3Speller compatible mode)
Application:Sequencing int SequenceType= 0 0 0 2 // Sequence of stimuli is 0 deterministic, 1 random, 2 P3Speller compatible (enumeration)
Application:Sequencing int NumberOfSequences= 1 1 0 % // number of sequence repetitions
Application:Sequencing intlist ToBeCopied= 1 1 1 1 % // Sequence in which stimuli need to be copied (only used in copy mode)
Application:Sequencing string UserComment= Seq0 // User comments for a specific run
Application:Stimuli matrix Stimuli= { caption icon audio } 4 GRASP SPLAY PINCH ASLY ../server/paradigms/Gestures/PRM/images/RightGrasp.png ../server/paradigms/Gestures/PRM/images/RightSplay.png ../server/paradigms/Gestures/PRM/images/RightPinch.png ../server/paradigms/Gestures/PRM/images/RightASLY.png % % % % // captions and icons to be displayed, av media to be played for different stimuli
Application:Stimuli matrix FocusOn= { caption icon audio } { focuson } % % % // initial announcement what to focus on
Application:Stimuli matrix Result= { caption icon audio } { result } % % % // final result announcement 
Application:Stimuli matrix ISIStimulus= { caption icon audio } { ISIStimulus } + % % // stimulus during inter-stimulus interval 
Application:Stimuli int StimulusWidth= 0 0 0 100 // StimulusWidth in percent of screen width (zero for original pixel size)
Application:Stimuli int CaptionHeight= 10 0 0 100 // Height of stimulus caption text in percent of screen height
Application:Stimuli string CaptionColor= 0xFFFFFF 0x00FFFFFF 0x00000000 0xFFFFFFFF // Color of stimulus caption text (color)
Application:Stimuli string BackgroundColor= 0x00000000 0x00FFFF00 0x00000000 0xFFFFFFFF // Color of stimulus background (color)
Application:Stimuli int CaptionSwitch= 0 1 0 1 // Present captions (boolean)
Application:Stimuli int IconSwitch= 1 1 0 1 // Present icon files (boolean)
Application:Stimuli int AVSwitch= 0 0 0 1 // Present media files (boolean)
Application:Stimuli int TimingSwitch= 1 0 0 1 // Draw timing marker on screen (boolean)
Application:Stimuli float AudioVolume= 100 100 0 100 // Volume for audio playback in percent
Application:Stimuli int AVPlayToEnd= 1 1 0 1 // Never abort playback of media files (boolean)
Application:Stimuli int AudioSwitch= 0 1 0 1 // Present audio files (boolean)(superseded by AVSwitch)
Application:Localization string Language= Default Default % % // Language for user messages
Application:Localization matrix LocalizedStrings= { German } { TIME%20OUT%20!!! Waiting%20to%20start%20... } Zeit%20abgelaufen! Warte%20... // Localized user messages

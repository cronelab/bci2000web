Application:Application%20Window:ApplicationWindow string WindowBackgroundColor= 0x000000 0x505050 % % // Application window background color (color)
Application:Sequencing:StimulusTask float PreRunDuration= 1 1 0 % // pause preceding first sequence
Application:Sequencing:StimulusTask float PostRunDuration= 1 0 0 % // pause following last sequence
Application:Sequencing:StimulusTask float PreSequenceDuration= 0 2s 0 % // pause preceding sequences/sets of intensifications
Application:Sequencing:StimulusTask float PostSequenceDuration= 0 2s 0 % // pause following sequences/sets of intensifications
Application:Sequencing:StimulusTask float StimulusDuration= 1s 40ms 0 % // stimulus duration
Application:Sequencing:StimulusTask string EarlyOffsetExpression= % // abort stimulus if this expression becomes true
Application:Sequencing:StimulusTask float ISIMinDuration= 3.0s 80ms 0 % // minimum duration of inter-stimulus interval
Application:Sequencing:StimulusTask float ISIMaxDuration= 4.0s 80ms 0 % // maximum duration of inter-stimulus interval
Application:Result%20Processing:StimulusTask int InterpretMode= 0 0 0 2 // interpretation of results: 0 none, 1 online free mode, 2 copy mode (enumeration)
Application:Result%20Processing:StimulusTask int DisplayResults= 1 1 0 1 // display results of copy/free spelling (boolean)
Application:Result%20Processing:StimulusTask int AccumulateEvidence= 0 0 0 1 // accumulate evidence until a selection is made (boolean)
Application:Result%20Processing:StimulusTask float MinimumEvidence= 0 0 0 % // do not make a selection unless target evidence exceeds this value. For a normalized classifier, MinimumEvidence approximates -2.3*log10(Error Probability)
Application:Sequencing:StimulusPresentationTask intlist Sequence= 1 1 // Sequence in which stimuli are presented (deterministic mode)/ Stimulus frequencies for each stimulus (random mode)/ Ignored (P3Speller compatible mode)
Application:Sequencing:StimulusPresentationTask int SequenceType= 2 0 0 2 // Sequence of stimuli is 0 deterministic, 1 random, 2 P3Speller compatible (enumeration)
Application:Sequencing:StimulusPresentationTask int NumberOfSequences= 100 1 0 % // number of sequence repetitions
Application:Sequencing:StimulusPresentationTask intlist ToBeCopied= 0 1 1 % // Sequence in which stimuli need to be copied (only used in copy mode)
Application:Sequencing:StimulusPresentationTask string UserComment= % // User comments for a specific run
Application:Stimuli:StimulusPresentationTask matrix Stimuli= { caption icon av } { stimulus1 } GO % sounds/ecog/zhoop.wav // captions and icons to be displayed, av media to be played for different stimuli
Application:Stimuli:StimulusPresentationTask matrix FocusOn= { caption icon av } { focuson } Please%20focus%20on images\focuson.bmp sounds\uh-uh.wav // initial announcement what to focus on
Application:Stimuli:StimulusPresentationTask matrix Result= { caption icon av } { result } The%20result%20was images\result.bmp sounds\uh-uh.wav // final result announcement 
Application:Stimuli:StimulusPresentationTask matrix ISIStimulus= { caption icon av } { ISI } + % % // stimulus during inter-stimulus interval 
Application:Stimuli:StimulusPresentationTask int StimulusWidth= 5 0 0 100 // StimulusWidth in percent of screen width (zero for original pixel size)
Application:Stimuli:StimulusPresentationTask int CaptionHeight= 10 0 0 100 // Height of stimulus caption text in percent of screen height
Application:Stimuli:StimulusPresentationTask string CaptionColor= 0x00FFFF00 0x00FFFFFF 0x00000000 0xFFFFFFFF // Color of stimulus caption text (color)
Application:Stimuli:StimulusPresentationTask string BackgroundColor= 0x00000000 0x00FFFF00 0x00000000 0xFFFFFFFF // Color of stimulus background (color)
Application:Stimuli:StimulusPresentationTask int CaptionSwitch= 1 1 0 1 // Present captions (boolean)
Application:Stimuli:StimulusPresentationTask int IconSwitch= 0 1 0 1 // Present icon files (boolean)
Application:Stimuli:StimulusPresentationTask int AVSwitch= 1 1 0 1 // Present media files (boolean)
Application:Stimuli:StimulusPresentationTask int TimingSwitch= 1 0 0 1 // Draw timing marker on screen (boolean)
Application:Stimuli:StimulusPresentationTask float AudioVolume= 100 100 0 100 // Volume for audio playback in percent
Application:Stimuli:StimulusPresentationTask int AVPlayToEnd= 1 1 0 1 // Never abort replay of media files (boolean)
Application:Localization:Localization string Language= Default Default % % // Language for user messages
Application:Localization:Localization matrix LocalizedStrings= { German } { TIME%20OUT%20!!! Waiting%20to%20start%20... } Zeit%20abgelaufen! Warte%20... // Localized user messages
Source:Blackrock:BlackrockADC matrix DigitalOutput= 1 { Instance Output Expression } 0 4 StimulusCode%20!=%200 // Expressions to control the digital outputs
Filtering:SpatialFilter int SpatialFilterType= 0 2 0 3 // spatial filter type 0: none, 1: full matrix, 2: sparse matrix, 3: common average reference (CAR) (enumeration)
Filtering:SpatialFilter:SpatialFilter matrix SpatialFilter= 4 4 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 % % // columns represent input channels, rows represent output channels
Filtering:SpatialFilter:SpatialFilter intlist SpatialFilterCAROutput= 0 // when using CAR filter type: list of output channels, or empty for all channels
Filtering:SpatialFilter:SpatialFilter int SpatialFilterMissingChannels= 1 0 0 1 // how to handle missing channels 0: ignore, 1: report error (enumeration)
Filtering:P3TemporalFilter int EpochLength= 150ms 500ms 0 % // Length of data epoch from stimulus onset
Filtering:P3TemporalFilter int ZeroPeriod= 60ms 100ms 0 % // Zero Period
Filtering:P3TemporalFilter int EpochsToAverage= 100 1 0 % // Number of epochs to average
Filtering:P3TemporalFilter int SingleEpochMode= 0 0 0 1 // Report result after each epoch (boolean)
Visualize:P3TemporalFilter int VisualizeP3TemporalFiltering= 1 0 0 1 // Visualize averaged epochs (0=no 1=yes) (boolean)
Visualize:P3TemporalFilter int TargetERPChannel= 1 1 % % // Input channel for which to display ERP data
Filtering:LinearClassifier matrix Classifier= 1 { input%20channel input%20element%20(bin) output%20channel weight } 1 1 1 1 // Linear classification matrix in sparse representation
Filtering:TrialSegmentationFilter string TrialTrigger= StimulusCode!=0 % % % // Expression that evalutes TRUE to trigger trial start
Filtering:TrialSegmentationFilter string WSTrialServer= localhost:20325 localhost:20325 % % // IP address/port to host a WebSocketServer on, e.g. localhost:20325
Filtering:TrialSegmentationFilter string TrialLength= 1s % % % // Trial Length